{
	"info": {
		"_postman_id": "dab38b0f-3f5a-4d46-a60f-5185ebc984eb",
		"name": "Testes Não Funcionais - Testes de Desempenho e Carga",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7000498"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Realizar login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"var iterationIndex = pm.info.iteration;\r",
									"pm.collectionVariables.set(\"token\" + iterationIndex, resposta.authorization);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var iterationIndex = pm.info.iteration;\r",
									"pm.collectionVariables.set(\"email\", \"user\" + iterationIndex + \"@teste.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"pucminas\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
					},
					"response": [
						{
							"name": "Login realizado com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "//localhost:3000/login",
									"path": [
										"",
										"localhost:3000",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"authorization\": \"<string>\"\n}"
						},
						{
							"name": "E-mail e/ou senha inválidos",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Cadastrar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"var iterationIndex = pm.info.iteration; //Obtém o índice da iteração atual\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"idUsuario_\" + iterationIndex, resposta._id);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Obtém o índice da iteração atual\r",
									"var iterationIndex = pm.info.iteration;\r",
									"\r",
									"// Define a variável de email com base na iteração\r",
									"var email = \"user\" + iterationIndex + \"@teste.com\";\r",
									"\r",
									"// Armazena o email em uma variável de coleção para uso posterior, se necessário\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"\r",
									"// Base URL\r",
									"var baseURL = pm.collectionVariables.get(\"baseUrl\");\r",
									"\r",
									"// Verifica se a variável baseURL foi definida corretamente\r",
									"if (!baseURL) {\r",
									"    console.error(\"baseURL não está definida no ambiente\");\r",
									"    return;\r",
									"}\r",
									"\r",
									"// Faz a requisição para listar os usuários\r",
									"pm.sendRequest({\r",
									"    url: baseURL + \"/usuarios\",\r",
									"    method: \"GET\"\r",
									"}, function (err, response) {\r",
									"    if (err) {\r",
									"        console.error(\"Erro na requisição:\", err);\r",
									"        return;\r",
									"    }\r",
									"\r",
									"    // Verifica se a resposta é válida e foi recebida com sucesso\r",
									"    if (response.code !== 200) {\r",
									"        console.error(\"Falha ao obter a lista de usuários\");\r",
									"        return;\r",
									"    }\r",
									"\r",
									"    // Passa a resposta JSON\r",
									"    var users = response.json().usuarios;\r",
									"\r",
									"    // Procura pelo usuário com o email desejado\r",
									"    var user = users.find(function (u) {\r",
									"        return u.email === email;\r",
									"    });\r",
									"\r",
									"    if (user) {\r",
									"        // Se o usuário foi encontrado, faz a requisição para deletar\r",
									"        pm.sendRequest({\r",
									"            url: baseURL + '/usuarios/' + user._id,\r",
									"            method: 'DELETE'\r",
									"        }, function (err, deleteResponse) {\r",
									"            if (err) {\r",
									"                console.error(\"Erro ao deletar o usuário:\", err);\r",
									"                return;\r",
									"            }\r",
									"\r",
									"            // Confirmação de deleção\r",
									"            console.log('Usuário deletado: ', user._id);\r",
									"            pm.test('Usuário foi deletado com sucesso', function () {\r",
									"                pm.expect(deleteResponse.code).to.be.oneOf([200, 204]);\r",
									"            });\r",
									"        });\r",
									"    } else {\r",
									"        console.log('Usuário não encontrado.');\r",
									"        pm.test('Usuário não encontrado', function () {\r",
									"            pm.expect(user).to.be.undefined;\r",
									"        });\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"Kleber Souza\",\n  \"email\": \"{{email}}\",\n  \"password\": \"pucminas\",\n  \"administrador\": \"true\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						},
						"description": "Não é permitido cadastrar usuário com email já utilizado"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "//localhost:3000/usuarios",
									"path": [
										"",
										"localhost:3000",
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"name": "E-mail já cadastrado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/usuarios",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "_idProduto",
			"value": "",
			"type": "string"
		},
		{
			"key": "_idProduto2",
			"value": "",
			"type": "string"
		},
		{
			"key": "_idCarrinho",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "idUsuario_0",
			"value": ""
		},
		{
			"key": "idUsuario_1",
			"value": ""
		},
		{
			"key": "token_0",
			"value": ""
		},
		{
			"key": "idUsuario",
			"value": ""
		},
		{
			"key": "qtdProduto",
			"value": ""
		},
		{
			"key": "token0",
			"value": ""
		}
	]
}